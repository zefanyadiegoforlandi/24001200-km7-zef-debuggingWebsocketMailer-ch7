<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="flex items-center justify-center h-screen bg-gray-100">
    <div class="bg-white p-8 rounded-lg shadow-lg w-full max-w-md">
        <h1 class="text-2xl font-semibold mb-6 text-center">Login</h1>
        
        <form id="loginForm" class="space-y-4">
            <div>
                <label for="email" class="block text-gray-700">Email</label>
                <input type="email" name="email" id="email" placeholder="Enter your email" required
                    class="w-full p-2 border border-gray-300 rounded focus:outline-none focus:border-blue-500">
            </div>
            <div>
                <label for="password" class="block text-gray-700">Password</label>
                <input type="password" name="password" id="password" placeholder="Enter your password" required
                    class="w-full p-2 border border-gray-300 rounded focus:outline-none focus:border-blue-500">
            </div>
            <button type="submit" class="w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600">Login</button>
        </form>
        
        <p id="forgotPasswordLink" class="mt-2 text-center text-blue-500 cursor-pointer hover:underline" onclick="sendForgotPasswordLink()">
            Forgot your password?
        </p>

        <p class="mt-4 text-center">
            Don't have an account? <a href="/register" class="text-blue-500 hover:underline">Register here</a>
        </p>

        <div id="notification" class="hidden p-4 mt-4 text-white rounded">
            <p id="notificationMessage"></p>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io('http://localhost:3000');

        const notification = document.getElementById('notification');
        const notificationMessage = document.getElementById('notificationMessage');

        socket.on('notification', (message) => {
            notification.classList.remove('hidden');
            notification.classList.remove('bg-red-500', 'bg-yellow-500', 'bg-green-500');
            
            if (message.toLowerCase().includes('success')) {
                notification.classList.add('bg-green-500');
            } else if (message.toLowerCase().includes('wait')) {
                notification.classList.add('bg-yellow-500');
            } else if (message.toLowerCase().includes('reset')) {
                notification.classList.add('bg-green-500');
            } else {
                notification.classList.add('bg-red-500');
            }
            
            notificationMessage.textContent = message;
        });

        document.getElementById('loginForm').addEventListener('submit', function(event) {
            event.preventDefault();
        
            const formData = new FormData(this);
            const data = {
                email: formData.get('email'),
                password: formData.get('password')
            };
        
            socket.emit('notification', 'Please wait..., sending mail');
        
            fetch('/api/auth/login', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(response => {
                if (response.ok) {
                    socket.emit('notification', 'Login successful!');
                    setTimeout(() => window.location.href = '/dashboard', 1000);
                } else {
                    response.json().then(data => {
                        socket.emit('notification', data.message || 'Error in login!');
                    });
                }
            })
            .catch(() => {
                socket.emit('notification', 'Error in login!');
            });
        });

        function sendForgotPasswordLink() {
            const email = document.getElementById('email').value;
            
            if (!email) {
                socket.emit('notification', 'Please enter your email address.', 'bg-red-500');
                return;
            }

            socket.emit('notification', 'Please wait...', 'bg-yellow-500');

            fetch('/api/password/forgot-password', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ email: email })
            })
            .then(response => {
                if (response.ok) {
                    socket.emit('notification', 'Password reset link sent to your email!', 'bg-green-500');
                } else {
                    response.json().then(data => {
                        socket.emit('notification', data.message || 'Error in sending reset link!', 'bg-red-500');
                    });
                }
            })
            .catch(() => {
                socket.emit('notification', 'Error in sending reset link!', 'bg-red-500');
            });
        }
    </script>
</body>
</html>
